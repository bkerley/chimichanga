#include "init.h"

dispatch "+"
{
	long a,b,r;
	a = (long)stack_pop(); // popl() turns into this
	b = (long)stack_pop();
	asm (
		"addq	%%rax, %%rbx"
		: "=b"(r)
		: "a"(a), "b"(b)
	);
	stack_push((stack_entry)r); // push(r) turns into this
}

dispatch "*"
{
	long a,b,r; // binop(a * b) turns into this whole function
	a = popl();
	b = popl();
	r = a * b;
	push(r);
}

dispatch "-"
{
	binop(b - a);
}

dispatch "/"
{
	binop(b / a);
}

dispatch "%"
{
	binop(b % a);
}

dispatch "<<"
{
	binop(b << a);
}

dispatch ">>"
{
	binop(b >> a);
}

dispatch "x"
{
	long a,b;
	a = popl();
	b = popl();
	push(a);
	push(b);
}

dispatch "pop"
{
	long a;
	a = popl();
	printf("%ld\n",a);
}

dispatch "pop.x"
{
	long a;
	a = popl();
	printf("0x%lx\n",a);
}
